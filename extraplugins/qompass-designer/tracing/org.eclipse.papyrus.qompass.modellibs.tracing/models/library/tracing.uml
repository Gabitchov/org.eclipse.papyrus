<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:C_Cpp="http://www.eclipse.org/papyrus/C_Cpp/1" xmlns:FCM="http://www.eclipse.org/papyrus/FCM/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_H-ZqYDKeEd-WprEKTCaiMA" name="Tracing">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_H-ZqYTKeEd-WprEKTCaiMA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_2NyU8DguEd-9wq2wHPy3lw">
      <importedPackage xmi:type="uml:Model" href="pathmap://QML_CORE/core.uml#_O6TiIDLUEd26WNosUASSSw"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_XW7KkEQYEd-RDttIPD8NUg">
      <importedPackage xmi:type="uml:Model" href="pathmap://QML_CORE/osal.uml#_ROTQYC-OEdySSa8YESkO2w"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_DRgF0D4NEeC-VMxjm_qUAg">
      <importedPackage xmi:type="uml:Model" href="pathmap://QML_CORE/corba.uml#_DtQEwDLdEd2_U4efLnjQIw"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_g2IY8DKeEd-WprEKTCaiMA" name="traceInterceptor">
      <packageMerge xmi:type="uml:PackageMerge" xmi:id="_2RoSYKNfEeCdIOXlyrCmKQ">
        <mergedPackage xmi:type="uml:Package" href="pathmap://QML_CORE/core.uml#_mMCK8PiPEd2UhpY2Y3WUyg"/>
      </packageMerge>
      <packagedElement xmi:type="uml:Package" xmi:id="_1rsK8PwkEeGWn-a9PUOYcA" name="otf">
        <ownedComment xmi:type="uml:Comment" xmi:id="_YUcjcKAeEeCF0uoVQbVQRg" annotatedElement="_aoSDwKAdEeCF0uoVQbVQRg">
          <body>Variant of OTF trace that only reports values that change.</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_hd5WkKPUEeClvI8FjeO1Ow" annotatedElement="_kIcwsKbnEeC0_qP7CUZIiQ">
          <body>A prior variant had a link with the methodCall_comp signature, since the operationIDs should be different, depending on the called component. This leads to a large number of generated classes. Current solution: configure the IDs on an instance level via ths InstanceConfigurator
</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_bb4kQLniEeCxXoyQxQ47PQ" annotatedElement="_aF1w4DKeEd-WprEKTCaiMA">
          <body>Trace implementation based on OTF trace library. Aggregates singleton TraceInit</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Class" xmi:id="_aF1w4DKeEd-WprEKTCaiMA" name="OTFTrace_impl">
          <generalization xmi:type="uml:Generalization" xmi:id="_WdRuUDaUEeKkY-29HX5sMQ" general="_MM6RwDaUEeKkY-29HX5sMQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_aF1w5TKeEd-WprEKTCaiMA" name="timestamp" isUnique="false">
            <type xmi:type="uml:Class" href="pathmap://QML_CORE/osal.uml#_FuKEEDj8Edy0Rd6V_tf1-Q"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aF1w5zKeEd-WprEKTCaiMA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aF1w5jKeEd-WprEKTCaiMA" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_plSuEF23Ed-12d_h0i1xhQ" name="traceInit" type="_apuYoDNwEd-1k-POY2IaLg" isUnique="false" aggregation="shared">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xUhqoF23Ed-12d_h0i1xhQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xUpmcF23Ed-12d_h0i1xhQ" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_mfNqoBavEeGq1uSGvh4rcQ" name="hasDeclaredFunctions" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://QML_CORE/corba.uml#_Bv7l0B-VEd6nGq8wpI2tjg"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_mfSjIBavEeGq1uSGvh4rcQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mfTKMBavEeGq1uSGvh4rcQ" value="1"/>
            <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_u-498Ba1EeGq1uSGvh4rcQ"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aF1w6DKeEd-WprEKTCaiMA" name="[name/]" specification="_aF1w7zKeEd-WprEKTCaiMA">
            <language>C/C++</language>
            <body>[import org::eclipse::papyrus::qompass::designer::core::acceleo::UMLTool/]
[import org::eclipse::papyrus::qompass::designer::core::acceleo::utils_cpp/]

[template public traceOp(operation: Operation)]

// &lt;instance>_&lt;port>_&lt;operation>
// easier: &lt;component>_&lt;port>_&lt;operation>
updateTimestamp ();
if (!hasDeclaredFunctions) {
	declareFunctions();
	hasDeclaredFunctions = true;
}
Tracing::TraceInit::wait();
int processID = Tracing::TraceInit::getProcessID();
OTF_Writer * writer = Tracing::TraceInit::getWriter();
OTF_Writer_writeEnter (writer, timestamp.ticks(), &lt;%enumSvcPrefix%>::id_&lt;%owner.varName%>_&lt;%varName%>, processID, 0);
OTF_Writer_writeEventComment (writer, timestamp.ticks(), processID, portName);
OTF_Writer_writeEventComment (writer, timestamp.ticks(), processID, instanceName);
Tracing::TraceInit::post();
[if not (type = null)] [type.cppType()/] ret = [/if]rconn->[operation.cppCall()/];
updateTimestamp ();
Tracing::TraceInit::wait();
OTF_Writer_writeLeave (writer, timestamp.ticks(), &lt;%enumSvcPrefix%>::id_&lt;%owner.varName%>_&lt;%varName%>, processID, 0);
Tracing::TraceInit::post();
[if not (type = null)] return ret;[/if]
[/template]</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aF1w6jKeEd-WprEKTCaiMA" name="updateTimestamp" specification="_aF1w8TKeEd-WprEKTCaiMA">
            <language>C/C++</language>
            <body>timestamp = OS_AL::Time::TimeVal::current ();
// gettimeofday (&amp;currentTime, NULL);
// timestamp = ...</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_73ynMBauEeGq1uSGvh4rcQ" name="declareFunctions" specification="_35DgwBauEeGq1uSGvh4rcQ">
            <language>C/C++</language>
            <body>// function groups are badly supported in OTF, since writeEnter/Leave do not support them
// thus intial plan that each interface corresponds to a function group has not been implemented
int fctGroupID = 0;
int streamNr = 0;
OTF_Writer * writer = Tracing::TraceInit::getWriter();
&lt;%for (getAllOperations) {%>
OTF_Writer_writeDefFunction (writer, streamNr, &lt;%enumSvcPrefix%>::id_&lt;%owner.varName%>_&lt;%varName%>, &lt;%quoteLiteral(&quot;InterfaceEnum&quot;, &quot;id_&lt;%owner.varName%>_&lt;%varName%>&quot;)%>, fctGroupID, 0);
&lt;%}%></body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aF1w7zKeEd-WprEKTCaiMA" name="[name/]" visibility="public" method="_aF1w6DKeEd-WprEKTCaiMA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_4e51QBatEeGq1uSGvh4rcQ">
              <body>&lt;&lt;TextualRepresentation>>public '&lt;%name%>' () { }</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aF1w8TKeEd-WprEKTCaiMA" name="updateTimestamp" method="_aF1w6jKeEd-WprEKTCaiMA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_35DgwBauEeGq1uSGvh4rcQ" name="declareFunctions" method="_73ynMBauEeGq1uSGvh4rcQ"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_BuqlQDOcEd-1k-POY2IaLg" name="OTFTrace_impl => TraceInit" client="_aF1w4DKeEd-WprEKTCaiMA" supplier="_apuYoDNwEd-1k-POY2IaLg"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_U1rDwPL5Ed-1eY2qOvQSbw" name="TraceImpl">
          <ownedTemplateSignature xmi:type="uml:TemplateSignature" xmi:id="_krDBAPL5Ed-1eY2qOvQSbw" parameter="_krDoEvL5Ed-1eY2qOvQSbw">
            <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_krDoEvL5Ed-1eY2qOvQSbw" parameteredElement="_krDoE_L5Ed-1eY2qOvQSbw">
              <ownedParameteredElement xmi:type="uml:Class" xmi:id="_krDoE_L5Ed-1eY2qOvQSbw" name="T" templateParameter="_krDoEvL5Ed-1eY2qOvQSbw">
                <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_krDoFPL5Ed-1eY2qOvQSbw" source="http://www.eclipse.org/emf/2002/Ecore">
                  <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_krDoFfL5Ed-1eY2qOvQSbw" key="constraints" value="InterfaceIsAbstract AtMostOneID UniqueFeatureNames UniqueOperationSignatures NoCircularSuperTypes WellFormedMapEntryClass ConsistentSuperTypes"/>
                </eAnnotations>
                <generalization xmi:type="uml:Generalization" xmi:id="_krDoFvL5Ed-1eY2qOvQSbw">
                  <general xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EClassifier"/>
                </generalization>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoF_L5Ed-1eY2qOvQSbw" name="abstract" visibility="public" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EBoolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoGPL5Ed-1eY2qOvQSbw"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoGfL5Ed-1eY2qOvQSbw" name="interface" visibility="public" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EBoolean"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoGvL5Ed-1eY2qOvQSbw"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoG_L5Ed-1eY2qOvQSbw" name="eSuperTypes" type="_krDoE_L5Ed-1eY2qOvQSbw" isOrdered="true">
                  <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_krDoHPL5Ed-1eY2qOvQSbw" source="http://www.eclipse.org/emf/2002/GenModel">
                    <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_krDoHfL5Ed-1eY2qOvQSbw" key="suppressedUnsetVisibility" value="true"/>
                    <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_krDoHvL5Ed-1eY2qOvQSbw" key="suppressedIsSetVisibility" value="true"/>
                  </eAnnotations>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoIPL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoH_L5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoIfL5Ed-1eY2qOvQSbw" name="eOperations" isOrdered="true" aggregation="composite">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EOperation"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoI_L5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoIvL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoJPL5Ed-1eY2qOvQSbw" name="eAllAttributes" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EAttribute"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoJvL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoJfL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoJ_L5Ed-1eY2qOvQSbw" name="eAllReferences" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EReference"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoKfL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoKPL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoKvL5Ed-1eY2qOvQSbw" name="eReferences" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EReference"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoLPL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoK_L5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoLfL5Ed-1eY2qOvQSbw" name="eAttributes" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EAttribute"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoL_L5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoLvL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoMPL5Ed-1eY2qOvQSbw" name="eAllContainments" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EReference"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoMvL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoMfL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoM_L5Ed-1eY2qOvQSbw" name="eAllOperations" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EOperation"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoNfL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoNPL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoNvL5Ed-1eY2qOvQSbw" name="eAllStructuralFeatures" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStructuralFeature"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoOPL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoN_L5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoOfL5Ed-1eY2qOvQSbw" name="eAllSuperTypes" type="_krDoE_L5Ed-1eY2qOvQSbw" isOrdered="true" isReadOnly="true" isDerived="true">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoO_L5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoOvL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoPPL5Ed-1eY2qOvQSbw" name="eIDAttribute" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EAttribute"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoPfL5Ed-1eY2qOvQSbw"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoPvL5Ed-1eY2qOvQSbw" name="eStructuralFeatures" isOrdered="true" aggregation="composite">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStructuralFeature"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoQPL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoP_L5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoQfL5Ed-1eY2qOvQSbw" name="eGenericSuperTypes" isOrdered="true" aggregation="composite">
                  <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_krDoQvL5Ed-1eY2qOvQSbw" source="http://www.eclipse.org/emf/2002/GenModel">
                    <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_krDoQ_L5Ed-1eY2qOvQSbw" key="suppressedUnsetVisibility" value="true"/>
                    <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_krDoRPL5Ed-1eY2qOvQSbw" key="suppressedIsSetVisibility" value="true"/>
                  </eAnnotations>
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EGenericType"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoRvL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoRfL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_krDoR_L5Ed-1eY2qOvQSbw" name="eAllGenericSuperTypes" isOrdered="true" isReadOnly="true" isDerived="true">
                  <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EGenericType"/>
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoSfL5Ed-1eY2qOvQSbw"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_krDoSPL5Ed-1eY2qOvQSbw" value="*"/>
                </ownedAttribute>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_krDoSvL5Ed-1eY2qOvQSbw" name="isSuperTypeOf" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoS_L5Ed-1eY2qOvQSbw" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EBoolean"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoTPL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoTfL5Ed-1eY2qOvQSbw" name="someClass" type="_krDoE_L5Ed-1eY2qOvQSbw" isOrdered="true">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoTvL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_krDoT_L5Ed-1eY2qOvQSbw" name="getFeatureCount" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoUPL5Ed-1eY2qOvQSbw" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EInt"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoUfL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_krDoUvL5Ed-1eY2qOvQSbw" name="getEStructuralFeature" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoU_L5Ed-1eY2qOvQSbw" isOrdered="true" direction="return">
                    <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStructuralFeature"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoVPL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoVfL5Ed-1eY2qOvQSbw" name="featureID" isOrdered="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EInt"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoVvL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_krDoV_L5Ed-1eY2qOvQSbw" name="getFeatureID" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoWPL5Ed-1eY2qOvQSbw" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EInt"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoWfL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoWvL5Ed-1eY2qOvQSbw" name="feature" isOrdered="true">
                    <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStructuralFeature"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoW_L5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_krDoXPL5Ed-1eY2qOvQSbw" name="getEStructuralFeature" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoXfL5Ed-1eY2qOvQSbw" isOrdered="true" direction="return">
                    <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStructuralFeature"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoXvL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_krDoX_L5Ed-1eY2qOvQSbw" name="featureName" isOrdered="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EString"/>
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_krDoYPL5Ed-1eY2qOvQSbw"/>
                  </ownedParameter>
                </ownedOperation>
              </ownedParameteredElement>
            </ownedParameter>
          </ownedTemplateSignature>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_aoSDwKAdEeCF0uoVQbVQRg" name="OTFTrace_vc">
          <generalization xmi:type="uml:Generalization" xmi:id="_nQ6YMKAdEeCF0uoVQbVQRg" general="_aF1w4DKeEd-WprEKTCaiMA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_EWKx4KD0EeCFDJJCA2W5wg" name="m_first">
            <type xmi:type="uml:PrimitiveType" href="pathmap://QML_CORE/corba.uml#_Bv7l0B-VEd6nGq8wpI2tjg"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_4LoXcKAeEeCF0uoVQbVQRg" name="[name/]" specification="_k4TsoKAeEeCF0uoVQbVQRg">
            <language>C/C++</language>
            <body>// &lt;instance>_&lt;port>_&lt;operation>
// easier: &lt;component>_&lt;port>_&lt;operation>
OTF_Writer * writer = Tracing::Trace::TraceInit::getWriter();
int processID = Tracing::Trace::TraceInit::getProcessID();
updateTimestamp ();
// need to store parameter values, but that is not simple, as we are not in the data-flow context
// => need specific data-flow trace
// (costly) solution? string comparison? [string has which size?] howto get string representation of each parameter?? (in particular for structs)
// too complicated...
// three specific data_flow trace, offering identical (but conjugated ports). PushP/PushP, PullC/PullC, PushC/PushC => three interceptors, howto select?

/*
if (m_first) {
	m_first = false;
	doTrace = true;
}
else 
*/
bool doTrace = true;
OS_AL::Util::BString200 parameters;
parameters &lt;&lt; &quot;port=&quot; &lt;&lt; portName &lt;&lt; &quot; &quot;;
if (doTrace) {
	Tracing::Trace::TraceInit::wait();
	&lt;%for (parametersInInout) {%>
		&lt;%if (filter(&quot;DataType&quot;)) {%>
			&lt;%for (ownedAttribute) {%>
	parameters &lt;&lt; &lt;%name%> &lt;&lt; &quot;#&quot;;
			&lt;%}%>
		&lt;%} else {%>		
	parameters &lt;&lt; &lt;%name%> &lt;&lt; &quot;#&quot;;
		&lt;%}%>
	&lt;%}%>
	OTF_Writer_writeEnter (writer, timestamp.ticks(), Tracing::Trace::ID_&lt;%args(0).varName%>_&lt;%varName%>, processID, 0);
	Tracing::Trace::TraceInit::post();
}
&lt;%if (type != null) {%>&lt;%type.cppType%> ret = &lt;%}%>rconn->&lt;%cppCall%>;
&lt;%if (type != null) {%>parameters &lt;&lt; &quot;r=&quot;
	&lt;%if (type.filter(&quot;DataType&quot;)) {%>
		&lt;%for (type.ownedAttribute) {%>
	&lt;&lt; ret.&lt;%name%> &lt;&lt; &quot;#&quot;
		&lt;%}%>;
	&lt;%}else{%>		
	&lt;&lt; ret;
	&lt;%}%>
&lt;%}%>
updateTimestamp ();
if (doTrace) {
	Tracing::Trace::TraceInit::wait();
	OTF_Writer_writeEventComment (writer, timestamp.ticks(), processID, parameters.data());
	OTF_Writer_writeLeave (writer, timestamp.ticks(), Tracing::Trace::ID_&lt;%args(0).varName%>_&lt;%varName%>, processID, 0);
	Tracing::Trace::TraceInit::post();
}
&lt;%if (type != null) {%>return ret;&lt;%}%></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CyKWkKD2EeCFDJJCA2W5wg" name="OTFTrace_vc" specification="_rlkwoKD0EeCFDJJCA2W5wg">
            <language>C/C++</language>
            <body>m_first = true;</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_k4TsoKAeEeCF0uoVQbVQRg" name="[name/]" method="_4LoXcKAeEeCF0uoVQbVQRg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_rlkwoKD0EeCFDJJCA2W5wg" name="OTFTrace_vc" method="_CyKWkKD2EeCFDJJCA2W5wg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_Mgn2cKKXEeCdIOXlyrCmKQ" name="OTFTrace_vc => BString" client="_aoSDwKAdEeCF0uoVQbVQRg">
          <supplier xmi:type="uml:Class" href="pathmap://QML_CORE/osal.uml#_0AwCEDO0EdyG-pUz-bb-Lg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_3pab4PwkEeGWn-a9PUOYcA" name="cout"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_kIcwsKbnEeC0_qP7CUZIiQ" name="IConfiguratorTrace"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_nUAnQC8HEeKwPrQVP28AQw" name="IConfiguratorOTF"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_MM6RwDaUEeKkY-29HX5sMQ" name="Trace" isAbstract="true">
        <generalization xmi:type="uml:Generalization" xmi:id="_MM6RwTaUEeKkY-29HX5sMQ">
          <general xmi:type="uml:Class" href="pathmap://QML_CORE/core.uml#_Zx2ZUA1jEd6tvthBDl600Q"/>
        </generalization>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_MM6RwjaUEeKkY-29HX5sMQ" name="portName" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MM6RwzaUEeKkY-29HX5sMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MM6RxDaUEeKkY-29HX5sMQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_MM6RxTaUEeKkY-29HX5sMQ" name="instanceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MM6RxjaUEeKkY-29HX5sMQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MM6RxzaUEeKkY-29HX5sMQ" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VzFlMLnhEeCxXoyQxQ47PQ" name="containerrules">
      <ownedComment xmi:type="uml:Comment" xmi:id="_aX6QECVIEeCPS8GFKAaKxw" annotatedElement="_GVZxwLdwEd-CtfrGQre34Q">
        <body>OTF (Open trace format) tracing mechanism</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_z43k0ChKEeKFu939Pz1RFA" annotatedElement="_wHuA0KAdEeCF0uoVQbVQRg">
        <body>An OTF based trace mechanism that tracks value changes</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_06dksChKEeKFu939Pz1RFA" annotatedElement="_I2OioPwkEeGWn-a9PUOYcA">
        <body>LTTng based trace mechanism for port interception</body>
      </ownedComment>
      <ownedComment xmi:type="uml:Comment" xmi:id="_LlPEIDdMEeKDRPyuWXNFNA" annotatedElement="_If04ACqLEeKGrchWittz_g">
        <body>LTTng LW mechanism for operations</body>
      </ownedComment>
      <packagedElement xmi:type="uml:Class" xmi:id="_GVZxwLdwEd-CtfrGQre34Q" name="RTraceOTF">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_lBO5MPUPEeCn1-FCrfecFg" name="trace" visibility="public" type="_aF1w4DKeEd-WprEKTCaiMA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wNCqUPUPEeCn1-FCrfecFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wNIJ4PUPEeCn1-FCrfecFg" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wNMbUPUPEeCn1-FCrfecFg">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_wHuA0KAdEeCF0uoVQbVQRg" name="RTraceOTF_VC">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_pm5cwPUPEeCn1-FCrfecFg" name="traceVC" visibility="public" type="_aoSDwKAdEeCF0uoVQbVQRg">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yevnMPUPEeCn1-FCrfecFg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yez4oPUPEeCn1-FCrfecFg" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ye3jAPUPEeCn1-FCrfecFg">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_I2OioPwkEeGWn-a9PUOYcA" name="RTraceLTTNG">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_d7If0PwkEeGWn-a9PUOYcA" name="interceptor" visibility="public" type="_pwl_MPxWEeGOK9t90vpALA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_gYc20PwkEeGWn-a9PUOYcA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_gZTLYPwkEeGWn-a9PUOYcA" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_gZWOsPwkEeGWn-a9PUOYcA">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vt7dACdbEeKGdt7FoegMYA" name="Copy_Of_RTraceLTTNG">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_vt7dASdbEeKGdt7FoegMYA" name="interceptor" visibility="public" type="_pwl_MPxWEeGOK9t90vpALA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vt7dAidbEeKGdt7FoegMYA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vt7dAydbEeKGdt7FoegMYA" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vt7dBCdbEeKGdt7FoegMYA">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_vt7dBSdbEeKGdt7FoegMYA" name="tp" visibility="public" type="_rGPjgPxWEeGOK9t90vpALA">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vt7dBidbEeKGdt7FoegMYA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vt7dBydbEeKGdt7FoegMYA" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vt7dCCdbEeKGdt7FoegMYA">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_If04ACqLEeKGrchWittz_g" name="LTTngLWRule">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_Avfe8C8PEeKVAPO2lpiVnA" name="instanceName" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_BuA8sC8PEeKVAPO2lpiVnA" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BuFOIC8PEeKVAPO2lpiVnA" value="1"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BuKtsC8PEeKVAPO2lpiVnA">
            <value xsi:nil="true"/>
          </defaultValue>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DGqhEC2jEeKEc8wNVBgHJg" name="operation1" specification="_eZ1RMCqLEeKGrchWittz_g">
          <language>C/C++</language>
          <body>[import org::eclipse::papyrus::qompass::modellibs::tracing::acceleo::traceLTTng/]

[template public anOperation(operation : Operation)]
[operation.invokeTP()/]
[/template]</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_eZ1RMCqLEeKGrchWittz_g" name="interceptOperation" method="_DGqhEC2jEeKEc8wNVBgHJg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_riv0oC5vEeKMZ5P9cEChlg" name="Dependency1" client="_If04ACqLEeKGrchWittz_g" supplier="_rGPjgPxWEeGOK9t90vpALA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QOOpsPzOEeGKDvxFM1SZ_g" name="traceExtension">
      <packagedElement xmi:type="uml:Package" xmi:id="_QApWIPzNEeGKDvxFM1SZ_g" name="lttng">
        <packageMerge xmi:type="uml:PackageMerge" xmi:id="_kGXHMPzNEeGKDvxFM1SZ_g">
          <mergedPackage xmi:type="uml:Package" href="pathmap://QML_CORE/core.uml#_m7SIwOUYEd-P08Bciq_LqQ"/>
        </packageMerge>
        <packagedElement xmi:type="uml:Class" xmi:id="_rGPjgPxWEeGOK9t90vpALA" name="LTTngClassTP"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VMJ8QPzOEeGKDvxFM1SZ_g" name="fixed">
      <packagedElement xmi:type="uml:Package" xmi:id="_K5J34PzNEeGKDvxFM1SZ_g" name="otf">
        <packagedElement xmi:type="uml:Usage" xmi:id="_7uQr8D4OEeC-VMxjm_qUAg" name="TraceInit => Thread (for ThreadId)" client="_apuYoDNwEd-1k-POY2IaLg">
          <supplier xmi:type="uml:Class" href="pathmap://QML_CORE/osal.uml#_-HeCsDj_Edy0Rd6V_tf1-Q"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_apuYoDNwEd-1k-POY2IaLg" name="TraceInit">
          <generalization xmi:type="uml:Generalization" xmi:id="_9zJj0DguEd-9wq2wHPy3lw">
            <general xmi:type="uml:Class" href="pathmap://QML_CORE/core.uml#_-WNegNtxEd6nqsBVkgJEEA"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_vYRuQDj1Ed-nsvkE2JvSTg" name="writer" isStatic="true" type="_W0t44Dj1Ed-nsvkE2JvSTg" isUnique="false" aggregation="shared"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_ZZ8mwDwLEd-CbfVdCYNz6Q" name="manager" isStatic="true" type="_LjsBkDwLEd-CbfVdCYNz6Q" isUnique="false" aggregation="shared"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_28RZED4NEeC-VMxjm_qUAg" name="streamNr" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://QML_CORE/corba.uml#_FxVBkB6LEd6Nj_33Eb_pxw"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_cy5msJ6oEeCNsP1Kjt4f_w" name="sema" isStatic="true">
            <type xmi:type="uml:Class" href="pathmap://QML_CORE/osal.uml#_D8njME_gEdy2tpS719xBwQ"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_czA7cJ6oEeCNsP1Kjt4f_w" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_czCJkJ6oEeCNsP1Kjt4f_w" value="1"/>
          </ownedAttribute>
          <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_UcPagD1nEd-Bk-AHd6yyoA" name="derived realization of ILifeCycle" client="_apuYoDNwEd-1k-POY2IaLg">
            <supplier xmi:type="uml:Interface" href="pathmap://QML_CORE/sysinterfaces.uml#_T3li0Dz6Ed-v9PxuTj6Elw"/>
            <contract xmi:type="uml:Interface" href="pathmap://QML_CORE/sysinterfaces.uml#_T3li0Dz6Ed-v9PxuTj6Elw"/>
          </interfaceRealization>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ILWGsDgvEd-9wq2wHPy3lw" name="activate" specification="_Ucl_0D1nEd-Bk-AHd6yyoA">
            <language>C/C++</language>
            <body>const char *filename= &quot;trace.otf&quot;;

//OTF_FileManager* manager;

uint32_t streams= 1;

/* file handles available */
uint32_t files= 10;

/* per-stream buffer size */
uint32_t buffersize= 10*1024;

/* compression on/off, test without compression to look at ASCII trace files */
// int compression= 0;

/*************************************
*		INIT		     *
*************************************/
manager= OTF_FileManager_open( files );
// assert( NULL != manager );

writer = OTF_Writer_open( filename, streams, manager );
OTF_Writer_setBufferSizes( writer, buffersize );

streamNr = 1;

OTF_Writer_writeDefTimerResolution( writer, 
	streamNr /* uint32_t stream */, 
	1e3 /* uint64_t ticksPerSecond */ );

// initial post
sema.post();</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uUZ2cDj1Ed-nsvkE2JvSTg" name="getWriter" specification="_RNVZoDj1Ed-nsvkE2JvSTg">
            <language>C/C++</language>
            <body>return writer;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2f_-UD1oEd-Bk-AHd6yyoA" name="deactivate" specification="_UdpIsD1nEd-Bk-AHd6yyoA">
            <language>C/C++</language>
            <body>   </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_W9k18ChjEeC5Ga5kAgjl0g" name="TraceInit" specification="_MR0d4ChjEeC5Ga5kAgjl0g">
            <language>C/C++</language>
            <body>// do not close in deactivate, since additional calls to OTF_write may occur later.
OTF_Writer_close(writer);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_g2IBUD4NEeC-VMxjm_qUAg" name="getProcessID" specification="_uegYAD4MEeC-VMxjm_qUAg">
            <language>C/C++</language>
            <body>int id = OS_AL::ProcessingResources::Thread::getId ();
for (int i = 0; i &lt; processSet.size (); i++) {
	if (processSet.get(i) == id) {
		return i+1;
	}
}
// not known yet => add
processSet.append(id);
int processID = processSet.size();
char name[16];
sprintf(name, &quot;id: %x&quot;, id);
OTF_Writer_writeDefProcess(writer, streamNr, processID, name, 0);
// OS_AL name only valid for threads created with OS_AL
// OTF_Writer_writeDefProcess(writer, streamNr, processID, OS_AL::ProcessingResources::Thread::getName().data(), 0);
// not required
// OTF_Writer_assignProcess(writer, processID, streamNr);
// OTF_Writer_mapProcess(writer, processID);
OTF_Writer_writeBeginProcess (writer, 0, processID);
return processID;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KUVkMJ6pEeCNsP1Kjt4f_w" name="wait" specification="_VIPBEJ6oEeCNsP1Kjt4f_w">
            <language>C/C++</language>
            <body>sema.wait();</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LNI0cJ6pEeCNsP1Kjt4f_w" name="post" specification="_Wm5-gJ6oEeCNsP1Kjt4f_w">
            <language>C/C++</language>
            <body>sema.post();</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_RNVZoDj1Ed-nsvkE2JvSTg" name="getWriter" isStatic="true" method="_uUZ2cDj1Ed-nsvkE2JvSTg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_v6J20Dj2Ed-nsvkE2JvSTg" name="ret" type="_W0t44Dj1Ed-nsvkE2JvSTg" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zsxM0Dj2Ed-nsvkE2JvSTg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zsya8Dj2Ed-nsvkE2JvSTg" value="1"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_zszCADj2Ed-nsvkE2JvSTg">
                <value xsi:nil="true"/>
              </defaultValue>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Ucl_0D1nEd-Bk-AHd6yyoA" name="activate" method="_ILWGsDgvEd-9wq2wHPy3lw"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UdpIsD1nEd-Bk-AHd6yyoA" name="deactivate" method="_2f_-UD1oEd-Bk-AHd6yyoA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_MR0d4ChjEeC5Ga5kAgjl0g" name="TraceInit" method="_W9k18ChjEeC5Ga5kAgjl0g"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uegYAD4MEeC-VMxjm_qUAg" name="getProcessID" isStatic="true" method="_g2IBUD4NEeC-VMxjm_qUAg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1PmRUD4MEeC-VMxjm_qUAg" name="ret" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://QML_CORE/corba.uml#_FxVBkB6LEd6Nj_33Eb_pxw"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VIPBEJ6oEeCNsP1Kjt4f_w" name="wait" isStatic="true" method="_KUVkMJ6pEeCNsP1Kjt4f_w"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Wm5-gJ6oEeCNsP1Kjt4f_w" name="post" isStatic="true" method="_LNI0cJ6pEeCNsP1Kjt4f_w"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_IewAUDguEd-9wq2wHPy3lw" name="externtypes">
          <packagedElement xmi:type="uml:Class" xmi:id="_W0t44Dj1Ed-nsvkE2JvSTg" name="OTF_Writer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LjsBkDwLEd-CbfVdCYNz6Q" name="OTF_FileManager"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_L90lEDYGEd-JF_b-mKqY4g" name="TraceTesting">
          <ownedTemplateSignature xmi:type="uml:TemplateSignature" xmi:id="_NJOoQDYGEd-JF_b-mKqY4g" parameter="_m8qNQDYKEd-JF_b-mKqY4g">
            <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="_m8qNQDYKEd-JF_b-mKqY4g" parameteredElement="_pfAOMDYKEd-JF_b-mKqY4g">
              <ownedParameteredElement xmi:type="uml:Enumeration" xmi:id="_pfAOMDYKEd-JF_b-mKqY4g" name="ParamEnumeration" templateParameter="_m8qNQDYKEd-JF_b-mKqY4g"/>
            </ownedParameter>
          </ownedTemplateSignature>
          <packagedElement xmi:type="uml:Class" xmi:id="_QNXx4DYKEd-JF_b-mKqY4g" name="TraceInitB">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QNXx4TYKEd-JF_b-mKqY4g" name="initDefs" specification="_QNXx4jYKEd-JF_b-mKqY4g">
              <language>C/C++</language>
              <body>OTF_Writer_writeDefFunctionGroup (writer, 0, &quot;application functions&quot;);
&lt;%for (ownedLiteral) {%>
	OTF_Writer_writeDefFunction (writer, 0, &lt;%name%>, &quot;&lt;%name%>&quot;, 0, 0);
&lt;%}%></body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_QNXx4jYKEd-JF_b-mKqY4g" name="initDefs" isStatic="true" method="_QNXx4TYKEd-JF_b-mKqY4g"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_NhImwPzNEeGKDvxFM1SZ_g" name="cout"/>
      <packagedElement xmi:type="uml:Package" xmi:id="_i3FbMPzOEeGKDvxFM1SZ_g" name="lttng">
        <packagedElement xmi:type="uml:Package" xmi:id="_nAkZEPzOEeGKDvxFM1SZ_g" name="externtypes">
          <packagedElement xmi:type="uml:Class" xmi:id="_v-VBcPzSEeGKDvxFM1SZ_g" name="tracepoint"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_P2j04CmiEeKp-eCvZDLsaw" name="LTTngCreateDestroy">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__CHDcCmlEeKp-eCvZDLsaw" name="LTTngCreateDestroy" specification="_UvQpMCmiEeKp-eCvZDLsaw">
            <language>C/C++</language>
            <body>TRACEPOINT_EVENT([tpName/], createClass, [clazz.qualifiedName /])</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_B-fVACmmEeKp-eCvZDLsaw" name="LTTngCreateDestroy" specification="_VUW6UCmiEeKp-eCvZDLsaw">
            <language>C/C++</language>
            <body>TRACEPOINT_EVENT([tpName/], destroyClass, [clazz.qualifiedName /])</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UvQpMCmiEeKp-eCvZDLsaw" name="LTTngCreateDestroy" method="__CHDcCmlEeKp-eCvZDLsaw"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VUW6UCmiEeKp-eCvZDLsaw" name="LTTngCreateDestroy" method="_B-fVACmmEeKp-eCvZDLsaw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_C4FREDV7EeKGAYOVxzQeAg" name="InitLttng"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_HkxCkDY_EeKxVvAop17bHw" name="traceInterceptorPort">
      <packageMerge xmi:type="uml:PackageMerge" xmi:id="_M9DV4DY_EeKxVvAop17bHw">
        <mergedPackage xmi:type="uml:Package" href="pathmap://QML_CORE/core.uml#_gEZXADY7EeKvFqG4YPX3sg"/>
      </packageMerge>
      <packagedElement xmi:type="uml:Package" xmi:id="_5gDNYPwkEeGWn-a9PUOYcA" name="lttng">
        <ownedComment xmi:type="uml:Comment" xmi:id="_r8PXYPxWEeGOK9t90vpALA" annotatedElement="_pwl_MPxWEeGOK9t90vpALA">
          <body>Interceptor</body>
        </ownedComment>
        <ownedComment xmi:type="uml:Comment" xmi:id="_ttvxQPxWEeGOK9t90vpALA" annotatedElement="_rGPjgPxWEeGOK9t90vpALA">
          <body>Trace Provider
</body>
        </ownedComment>
        <packagedElement xmi:type="uml:Class" xmi:id="_pwl_MPxWEeGOK9t90vpALA" name="LTTngInterceptor">
          <generalization xmi:type="uml:Generalization" xmi:id="_1963sPxWEeGOK9t90vpALA" general="_dcP9gDaSEeKxVvAop17bHw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_qLhLMPxXEeGOK9t90vpALA" name="[name/]" specification="_YU5H4PxXEeGOK9t90vpALA">
            <language>C/C++</language>
            <body>[import org::eclipse::papyrus::qompass::designer::core::acceleo::utils_cpp/]
[import org::eclipse::papyrus::qompass::designer::core::acceleo::UMLTool/]
[import org::eclipse::papyrus::qompass::modellibs::tracing::acceleo::traceLTTng/]

[template public anOperation(operation : Operation)]

// create event with operationID/portID and pass call
[operation.invokeTP()/]
[if not (type = null)]return [/if]rconn->[operation.cppCall()/];
[/template]</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YU5H4PxXEeGOK9t90vpALA" name="[name/]" method="_qLhLMPxXEeGOK9t90vpALA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_BV2G4PzTEeGKDvxFM1SZ_g" name="Usage1" client="_pwl_MPxWEeGOK9t90vpALA" supplier="_v-VBcPzSEeGKDvxFM1SZ_g"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_gveqADHKEeKt1a2SZnJmwg" name="LTTngIntfTP"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_9ygUUDHKEeKt1a2SZnJmwg" name="Dependency1" client="_pwl_MPxWEeGOK9t90vpALA" supplier="_gveqADHKEeKt1a2SZnJmwg"/>
        <packagedElement xmi:type="uml:Dependency" xmi:id="_c0nqkDWGEeKGAYOVxzQeAg" name="Dependency2" client="_pwl_MPxWEeGOK9t90vpALA" supplier="_C4FREDV7EeKGAYOVxzQeAg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dcP9gDaSEeKxVvAop17bHw" name="TracePort" isAbstract="true">
        <generalization xmi:type="uml:Generalization" xmi:id="_dcP9gTaSEeKxVvAop17bHw">
          <general xmi:type="uml:Class" href="pathmap://QML_CORE/core.uml#_Zx2ZUA1jEd6tvthBDl600Q"/>
        </generalization>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_dcP9gjaSEeKxVvAop17bHw" name="portName" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dcP9gzaSEeKxVvAop17bHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dcP9hDaSEeKxVvAop17bHw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_dcP9hTaSEeKxVvAop17bHw" name="instanceName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dcP9hjaSEeKxVvAop17bHw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dcP9hzaSEeKxVvAop17bHw" value="1"/>
        </ownedAttribute>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_H_B8gDKeEd-WprEKTCaiMA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_H_DxsDKeEd-WprEKTCaiMA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/StandardL2.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_-DLL0DKnEd-WprEKTCaiMA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_-DXZEDKnEd-WprEKTCaiMA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/FCM/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://FCM_PROFILES/FCM.profile.uml#_5mvT0MtjEd2H_o0jIC6qDQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_N6l98DguEd-9wq2wHPy3lw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_N6vH4DguEd-9wq2wHPy3lw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/C_Cpp/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusC_Cpp_PROFILES/C_Cpp.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
  </uml:Model>
  <standard:ModelLibrary xmi:id="_ICaAoDKeEd-WprEKTCaiMA" base_Package="_H-ZqYDKeEd-WprEKTCaiMA"/>
  <FCM:Template xmi:id="_bKc-kDNZEd-0bO2vHbUkEA" base_Element="_aF1w7zKeEd-WprEKTCaiMA" kind="LoopOperations">
    <helper xmi:type="FCM:BindingHelper" href="pathmap://QML_CORE/core.uml#_nLe_sHJDEeOMF7YEvnQt5g"/>
    <formalParam xmi:type="uml:Interface" href="pathmap://QML_CORE/core.uml#_ZzlzMPfBEd2TbIfwytOyPA"/>
    <templateParam xmi:type="uml:Interface" href="pathmap://QML_CORE/core.uml#_ZzlzMPfBEd2TbIfwytOyPA"/>
  </FCM:Template>
  <FCM:DerivedElement xmi:id="_Adb_0DgvEd-9wq2wHPy3lw">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_C9IK4JsqEd61Eo3nmu3JhQ"/>
  </FCM:DerivedElement>
  <FCM:Singleton xmi:id="_AdBwIDgvEd-9wq2wHPy3lw" base_Class="_apuYoDNwEd-1k-POY2IaLg"/>
  <C_Cpp:Include xmi:id="_ZWEQwDj0Ed-nsvkE2JvSTg" body="#include &lt;otflib/otf.h>" base_class="_aF1w4DKeEd-WprEKTCaiMA"/>
  <C_Cpp:External xmi:id="_ZVArYDj1Ed-nsvkE2JvSTg" name="otflib/OTF_Writer.h" base_class="_W0t44Dj1Ed-nsvkE2JvSTg"/>
  <C_Cpp:Ptr xmi:id="_9n7OYDj2Ed-nsvkE2JvSTg" base_parameter="_v6J20Dj2Ed-nsvkE2JvSTg"/>
  <FCM:DerivedElement xmi:id="_UdG9MD1nEd-Bk-AHd6yyoA" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_UeZ9sD1nEd-Bk-AHd6yyoA" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <C_Cpp:Virtual xmi:id="___fNAD1nEd-Bk-AHd6yyoA" base_operation="_UdpIsD1nEd-Bk-AHd6yyoA"/>
  <C_Cpp:Virtual xmi:id="_AHNwMD1pEd-Bk-AHd6yyoA" base_operation="_Ucl_0D1nEd-Bk-AHd6yyoA"/>
  <FCM:DerivedElement xmi:id="_Q44J0EI7Ed-BYfDlJlYJUQ" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_Q5EXEEI7Ed-BYfDlJlYJUQ" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_6f5KEEJEEd-Ps4Bfh0j9LQ" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_6gni0EJEEd-Ps4Bfh0j9LQ" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="__8ZM4EPiEd-NwdL0D_IutQ" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="__8bpIEPiEd-NwdL0D_IutQ" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_Md_SIEQYEd-RDttIPD8NUg" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_MeJqMEQYEd-RDttIPD8NUg" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_ibefIFKoEd-OfYmxqPWG5g" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_ibg7YFKoEd-OfYmxqPWG5g" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_KshoEFmvEd-9TNLvplUFDQ" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_KskrYFmvEd-9TNLvplUFDQ" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_JK7ncF2qEd-12d_h0i1xhQ" base_Element="_Ucl_0D1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_WHyq4Dz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <FCM:DerivedElement xmi:id="_JK-qwF2qEd-12d_h0i1xhQ" base_Element="_UdpIsD1nEd-Bk-AHd6yyoA">
    <source xmi:type="uml:Operation" href="pathmap://QML_CORE/sysinterfaces.uml#_W7YrADz6Ed-v9PxuTj6Elw"/>
  </FCM:DerivedElement>
  <C_Cpp:ExternLibrary xmi:id="_Sv6AMIKiEd-XA4A2KZ9L7Q" base_Package="_IewAUDguEd-9wq2wHPy3lw">
    <libPaths>/OTF-1.5/otflib/.libs</libPaths>
    <libs>otf</libs>
    <includes>/OTF-1.5</includes>
    <includes>otflib/includes.h</includes>
  </C_Cpp:ExternLibrary>
  <FCM:ContainerRule xmi:id="_ISo6gLdwEd-CtfrGQre34Q" base_Class="_GVZxwLdwEd-CtfrGQre34Q" extensionKind="InterceptAllPorts" interceptor="_35od4DKrEd-z5o2wSoJ16A">
    <forConfig xmi:type="FCM:ConfigOption" href="pathmap://QML_CORE/core.uml#_u6LqoH7eEd-FNNgSS03RxQ"/>
  </FCM:ContainerRule>
  <C_Cpp:External xmi:id="_AGg3EPT8Ed-jjdbo8hMhwA" name="otflib/OTF_FileManager.h" base_class="_LjsBkDwLEd-CbfVdCYNz6Q"/>
  <C_Cpp:Include xmi:id="_mk_ccD5sEeC-VMxjm_qUAg" body="#include &lt;OS_AL/Sets/SetOf.h>&#xA;OS_AL::Sets::SetOf &lt;int> processSet;" base_class="_apuYoDNwEd-1k-POY2IaLg"/>
  <FCM:ContainerRule xmi:id="_6FqQoKAdEeCF0uoVQbVQRg" base_Class="_wHuA0KAdEeCF0uoVQbVQRg" extensionKind="InterceptAllPorts" interceptor="_JvP0oKAeEeCF0uoVQbVQRg" propagate="true">
    <forConfig xmi:type="FCM:ConfigOption" href="pathmap://QML_CORE/core.uml#_u6LqoH7eEd-FNNgSS03RxQ"/>
  </FCM:ContainerRule>
  <FCM:Template xmi:id="_pplDQKAeEeCF0uoVQbVQRg" base_Element="_k4TsoKAeEeCF0uoVQbVQRg" kind="LoopOperations">
    <helper xmi:type="FCM:BindingHelper" href="pathmap://QML_CORE/core.uml#_nLe_sHJDEeOMF7YEvnQt5g"/>
  </FCM:Template>
  <FCM:InstanceConfigurator xmi:id="_nTMOYKbnEeC0_qP7CUZIiQ" base_Class="_kIcwsKbnEeC0_qP7CUZIiQ"/>
  <FCM:UseInstanceConfigurator xmi:id="_plb90KbnEeC0_qP7CUZIiQ" base_Class="_aF1w4DKeEd-WprEKTCaiMA" configurator="_nUB1YC8HEeKwPrQVP28AQw"/>
  <FCM:UseInstanceConfigurator xmi:id="_MmzO0KboEeC0_qP7CUZIiQ" base_Class="_aoSDwKAdEeCF0uoVQbVQRg" configurator="_nUB1YC8HEeKwPrQVP28AQw"/>
  <FCM:InterceptionRule xmi:id="_RBO5IPUQEeCn1-FCrfecFg" interceptionKind="InterceptAllIn" base_Property="_lBO5MPUPEeCn1-FCrfecFg"/>
  <FCM:InterceptionRule xmi:id="_TLg_YPUQEeCn1-FCrfecFg" interceptionKind="InterceptAllIn" base_Property="_pm5cwPUPEeCn1-FCrfecFg"/>
  <FCM:Template xmi:id="_NDkWsBavEeGq1uSGvh4rcQ" base_Element="_35DgwBauEeGq1uSGvh4rcQ"/>
  <FCM:InteractionComponent xmi:id="_7J88sG6FEeGqWMX2LwdLDw" base_Class="_aF1w4DKeEd-WprEKTCaiMA"/>
  <FCM:InteractionComponent xmi:id="_-t6LoG6FEeGqWMX2LwdLDw" base_Class="_aoSDwKAdEeCF0uoVQbVQRg"/>
  <FCM:ContainerRule xmi:id="_RWQC8PwkEeGWn-a9PUOYcA" base_Class="_I2OioPwkEeGWn-a9PUOYcA">
    <forConfig xmi:type="FCM:ConfigOption" href="pathmap://QML_CORE/core.uml#_u6LqoH7eEd-FNNgSS03RxQ"/>
  </FCM:ContainerRule>
  <FCM:InterceptionRule xmi:id="_m-L0sPwkEeGWn-a9PUOYcA" interceptionKind="InterceptAll" base_Property="_d7If0PwkEeGWn-a9PUOYcA"/>
  <C_Cpp:Include xmi:id="__rP4oPxWEeGOK9t90vpALA" preBody="#define TRACEPOINT_CREATE_PROBES&#xA;#define TRACEPOINT_DEFINE" header="[import org::eclipse::papyrus::qompass::modellibs::tracing::acceleo::traceLTTng/]&#xA;&#xA;[template public LTTngTP(clazz : Class)]&#xA;[clazz.declareTP()/]&#xA;[/template]" base_class="_rGPjgPxWEeGOK9t90vpALA"/>
  <FCM:Template xmi:id="_bKW5IPxXEeGOK9t90vpALA" base_Element="_YU5H4PxXEeGOK9t90vpALA" kind="LoopOperations">
    <helper xmi:type="FCM:BindingHelper" href="pathmap://QML_CORE/core.uml#_nLe_sHJDEeOMF7YEvnQt5g"/>
  </FCM:Template>
  <C_Cpp:ExternLibrary xmi:id="_t_sHUPzOEeGKDvxFM1SZ_g" base_Package="_nAkZEPzOEeGKDvxFM1SZ_g">
    <libs>lttng-ust</libs>
    <libs>dl</libs>
  </C_Cpp:ExternLibrary>
  <C_Cpp:External xmi:id="_1PAQ4PzSEeGKDvxFM1SZ_g" name="lttng/tracepoint.h" base_class="_v-VBcPzSEeGKDvxFM1SZ_g"/>
  <FCM:Template xmi:id="_flfM8PzhEeGe5LUTfvP5hQ" base_Element="_rGPjgPxWEeGOK9t90vpALA"/>
  <FCM:InteractionComponent xmi:id="__yL98PzhEeGe5LUTfvP5hQ" base_Class="_pwl_MPxWEeGOK9t90vpALA"/>
  <C_Cpp:ManualGeneration xmi:id="_KSTlgCdaEeKGdt7FoegMYA" extensionBody="c" base_Class="_rGPjgPxWEeGOK9t90vpALA"/>
  <FCM:InterceptionRule xmi:id="_vt_HYSdbEeKGdt7FoegMYA" interceptionKind="InterceptAllIn" base_Property="_vt7dASdbEeKGdt7FoegMYA"/>
  <standard:Create xmi:id="_X1okQCmiEeKp-eCvZDLsaw" base_BehavioralFeature="_UvQpMCmiEeKp-eCvZDLsaw"/>
  <standard:Destroy xmi:id="_ZJYEECmiEeKp-eCvZDLsaw" base_BehavioralFeature="_VUW6UCmiEeKp-eCvZDLsaw"/>
  <FCM:ContainerRule xmi:id="_NtAukCqLEeKGrchWittz_g" base_Class="_If04ACqLEeKGrchWittz_g" kind="LightWeightOORule">
    <forConfig xmi:type="FCM:ConfigOption" href="pathmap://QML_CORE/core.uml#_u6LqoH7eEd-FNNgSS03RxQ"/>
  </FCM:ContainerRule>
  <FCM:Template xmi:id="_AhsuYCqMEeKGrchWittz_g" base_Element="_eZ1RMCqLEeKGrchWittz_g"/>
  <FCM:InterceptionRule xmi:id="_IN6uwC2jEeKEc8wNVBgHJg" interceptionKind="InterceptAll" base_Operation="_eZ1RMCqLEeKGrchWittz_g"/>
  <FCM:UseInstanceConfigurator xmi:id="_1yKFIC8CEeKwPrQVP28AQw" base_Class="_pwl_MPxWEeGOK9t90vpALA" configurator="_nTMOYKbnEeC0_qP7CUZIiQ"/>
  <FCM:UseInstanceConfigurator xmi:id="_5FYwcC8CEeKwPrQVP28AQw" base_Class="_I2OioPwkEeGWn-a9PUOYcA" configurator="_nTMOYKbnEeC0_qP7CUZIiQ"/>
  <FCM:UseInstanceConfigurator xmi:id="_gH1RQC8DEeKwPrQVP28AQw" base_Class="_If04ACqLEeKGrchWittz_g" configurator="_nTMOYKbnEeC0_qP7CUZIiQ"/>
  <FCM:InstanceConfigurator xmi:id="_nUB1YC8HEeKwPrQVP28AQw" base_Class="_nUAnQC8HEeKwPrQVP28AQw"/>
  <C_Cpp:Include xmi:id="_gvf4IDHKEeKt1a2SZnJmwg" preBody="#define TRACEPOINT_CREATE_PROBES&#xA;#define TRACEPOINT_DEFINE" header="[import org::eclipse::papyrus::qompass::modellibs::tracing::acceleo::traceLTTng/]&#xA;&#xA;[template public LTTngTP(intf : Interface)]&#xA;[intf.declareTP()/]&#xA;[/template]" base_class="_gveqADHKEeKt1a2SZnJmwg"/>
  <FCM:Template xmi:id="_gvnM4DHKEeKt1a2SZnJmwg" base_Element="_gveqADHKEeKt1a2SZnJmwg">
    <helper xmi:type="FCM:BindingHelper" href="pathmap://QML_CORE/core.uml#_mFUQALsMEeO0n5elMxN1LQ"/>
  </FCM:Template>
  <C_Cpp:ManualGeneration xmi:id="_gvnz8DHKEeKt1a2SZnJmwg" extensionBody="c" base_Class="_gveqADHKEeKt1a2SZnJmwg"/>
  <C_Cpp:ManualGeneration xmi:id="_WUbVADV7EeKGAYOVxzQeAg" extensionBody="c" base_Class="_C4FREDV7EeKGAYOVxzQeAg"/>
  <C_Cpp:Include xmi:id="_ZdHkQDV7EeKGAYOVxzQeAg" header="[import org::eclipse::papyrus::qompass::designer::core::acceleo::UMLTool/]&#xA;[import org::eclipse::papyrus::qompass::designer::core::acceleo::TransformationContext/]&#xA;&#xA;[template public LTTngTP(cl : Classifier)]&#xA;#include &lt;lttng/tracepoint.h>&#xA;&#xA;TRACEPOINT_MODEL_EMF_URI(UMLmodel, starting, &quot;[getSourceRoot().getURI()/]&quot;)&#xA;[/template]&#xA;" base_class="_C4FREDV7EeKGAYOVxzQeAg"/>
  <FCM:Template xmi:id="_HOvQ0DWSEeKGAYOVxzQeAg" base_Element="_C4FREDV7EeKGAYOVxzQeAg" kind="PassClassifier"/>
</xmi:XMI>
