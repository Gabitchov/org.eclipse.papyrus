/*****************************************************************************
 * Copyright (c) 2010 CEA LIST.
 *
 *    
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  CEA LIST - Initial API and implementation
 *
 *****************************************************************************/

grammar org.eclipse.papyrus.uml.textedit.port.xtext.UmlPort with org.eclipse.papyrus.uml.alf.Common

import "http://www.eclipse.org/uml2/5.0.0/UML" as uml
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


generate umlPort "http://www.eclipse.org/papyrus/uml/textedit/port/xtext/UmlPort"

PortRule:
	visibility = VisibilityKind
	(isDerived = "/")? 
	name=ID ':' (isConjugated = "~")? ((type=TypeRule) | "<Undefined>")
	(multiplicity = MultiplicityRule) ? 
	(modifiers = ModifiersRule) ? 
	(default = DefaultValueRule) ? ;

enum VisibilityKind:
	public = "+"
	| private = "-"
	| protected = "#"
	| package = "~" ;

TypeRule :
	(path=QualifiedName)? type=[uml::Classifier] ;

QualifiedName :
	path=[uml::Namespace]'::' (remaining=QualifiedName)? ; 
	
MultiplicityRule:
	"[" bounds+=BoundSpecification ('..' bounds+=BoundSpecification)? "]" ;

BoundSpecification:
	value = UnlimitedLiteral ;


UnlimitedLiteral returns ecore::EString: INT |'*';


ModifiersRule:
	'{' values += ModifierSpecification (',' values += ModifierSpecification)* '}';

ModifierSpecification:
	value = ModifierKind 
	| redefines = RedefinesRule 
	| subsets = SubsetsRule ;

enum ModifierKind:
	readOnly = "readOnly" 
	| union = "union" 
	| ordered = "ordered" 
	| unique = "unique" ;

RedefinesRule :
	'redefines' port = [uml::Port] ;

SubsetsRule :
	'subsets' port = [uml::Port] ;

DefaultValueRule :
	'=' default = STRING ;